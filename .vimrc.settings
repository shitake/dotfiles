set runtimepath^=~/dotfiles/.vim

set clipboard=unnamed                               " クリップボード使用
set whichwrap=b,s,h,l,<,>,[,]                       " カーソルが行頭，行末で止まらないようにする set showcmd                                            " コマンドをステータス行に表示
set showmode                                        " 現在のモード表示
set number                                          " 行番号
set noswapfile                                      " スワップファイルを作らない
set nobackup                                        " バックアップファイル作らん
set noundofile                                      " undoファイルを作らぬ
set list                                            " 不可視文字を表示
set listchars=tab:>.,trail:_,extends:>,precedes:<   " 不可視文字の表示形式
set display=uhex                                    " 印字不可能文字を16進数で表示
set autoread                                        " 余所の更新を自動で更新
set formatoptions=lmoq                              " テキスト整形オプション，マルチバイト系を追加
set clipboard+=unnamed                              " OSのクリップボードを使う
set ffs=unix,dos,mac                                " 改行文字
set encoding=utf-8                                  " デフォルトエンコーディング
set scrolloff=5                                     " スクロール時の余白確保
set ignorecase                                      " 大文字小文字無視
set smartcase                                       " 検索文字列に大文字が含まれている場合は区別
set incsearch                                       " インクリメンタルサーチ

" 全角スペースの表示
highlight ZenkakuSpace cterm=underline ctermfg=lightblue guibg=darkgray
match ZenkakuSpace /　/

" ESC2回でハイライト消す
nmap <ESC><ESC> :nohlsearch<CR><ESC>

" ESCを別のキーへ割り当て
inoremap <silent> jj <ESC>
inoremap <C-j> <ESC>
noremap <C-j> <ESC>
vnoremap <C-j> <ESC>

" 行末の空白文字をハイライト
augroup HighlightTrailingSpaces
  autocmd!
  autocmd VimEnter, WinEnter, ColorScheme * highlight TrailingSpaces term=underline guibg~Red ctermbg=Red
  autocmd VimEnter, WinEnter * match TrailingSpacese /\s\+$/
augroup END

" ,の後にスペース挿入
inoremap , ,<Space>

" 保存時に行末の空白を削除
autocmd BufWritePre * :%s/\s\+$//ge

" 複数行のインデントを連続で実行
vnoremap <silent> > >gv
vnoremap <silent> < <gv

" ターミナルでマウス使用可
set mouse=a
set guioptions+=a
set ttymouse=xterm2

" コメントの自動挿入を無効
augroup auto_comment_off
    autocmd!
    autocmd BufEnter * setlocal formatoptions-=r
    autocmd BufEnter * setlocal formatoptions-=o
augroup END

" ---------- インデント ----------
set autoindent  " 有効化
set smartindent  " 新しい行開始時に，現在と同じだけインデント
set cindent

" softtabstopはTabキー押し下げ時に挿入される空白の量，0の場合はtabstopと同じ
set tabstop=4 shiftwidth=4 softtabstop=0  "ts, sw, stsで代用可

if has("autocmd")
    filetype plugin on  " ファイルタイプの検索を有効化
    filetype indent on  " ファイルタイプごとのインデント

    autocmd FileType python        setlocal sw=4 sts=4 ts=4 et  " sts=0 から 4にした
    autocmd FileType html        setlocal sw=2 sts=2 ts=2 et
    autocmd FileType css        setlocal sw=2 sts=2 ts=2 et
    autocmd FileType javascript setlocal sw=2 sts=2 ts=2 et
    autocmd FileType ruby        setlocal sw=2 sts=2 ts 2 et
endif

" set noexpandtab  " ソフトTab(タブの代わりにスペースを入れる)をOFFにする
set expandtab

" ---------- 移動とか ----------


" ---------- ステータスライン ----------
set laststatus=2  " 常時ステータスライン表示
set ruler  " カーソルの位置情報表示

" 高速端末
set ttyfast

" コマンド実行中は描画を中断
set lazyredraw

" ------------------------------
" easy-motion
" ------------------------------
" ジャンプ用キー変更
let g:EasyMotion_keys='hjklasdfgyuiopqwertnmvcxzbHJKLASDFGYUIOPQWERTNMVCXZB'
" <Leader>を ; に割当
let g:EasyMotion_leader_key=';'
" smartcase 大文字小文字無視
let g:EasyMotion_smartcase=1
" 双方向検索 <Leader>なしでs使えるようにした
nmap s <Plug>(easymotion-s)
vmap s <Plug>(easymotion-s)
omap s <Plug>(easymotion-s)
" JK Motionの変更 先頭列ではなくカレント列
let g:EasyMotion_startofline=0

" ------------------------------
" lightline.vim
" ------------------------------
let g:lightline = {
            \ 'colorscheme': 'solarized'
            \ }

" ------------------------------
" previm
" ------------------------------
augroup PrevimSettings
    autocmd!
    autocmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
augroup END

filetype plugin on  " ファイルタイプ判定on
