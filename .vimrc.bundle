if has('vim_starting')
  set runtimepath+=~/dotfiles/vimfiles/bundle/neobundle.vim
endif

call neobundle#begin(expand('~/dotfiles/vimfiles/bundle'))
" manage
NeoBundleFetch 'Shougo/neobundle.vim'


" ------------------------------
" 以下plugin一覧
" ------------------------------

" neocomplete, neocomplcache
" if_luaが有効ならneocompleteを使う
NeoBundle has('lua') ? 'Shougo/neocomplete' : 'Shougo/neocomplcache'  " neocomplete使うとdjangoいじるとき落ちる neocomplcacheでも落ちる!!

if neobundle#is_installed('neocomplete')
    " neocomplete用設定
    let g:neocomplete#enable_at_startup = 1
    let g:neocomplete#enable_ignore_case = 1
    let g:neocomplete#enable_smart_case = 1
    if !exists('g:neocomplete#keyword_patterns')
        let g:neocomplete#keyword_patterns = {}
    endif
    let g:neocomplete#keyword_patterns._ = '\h\w*'
elseif neobundle#is_installed('neocomplcache')
    " neocomplcache用設定
    let g:neocomplcache_enable_at_startup = 1
    let g:neocomplcache_enable_ignore_case = 1
    let g:neocomplcache_enable_smart_case = 1
    if !exists('g:neocomplcache_keyword_patterns')
        let g:neocomplcache_keyword_patterns = {}
    endif
    let g:neocomplcache_keyword_patterns._ = '\h\w*'
    let g:neocomplcache_enable_camel_case_completion = 1
    let g:neocomplcache_enable_underbar_completion = 1
endif
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<S-TAB>"

" neocomplcache用設定
NeoBundle 'Shougo/neocomplcache'
let g:neocomplcache_enable_at_startup = 1
let g:neocomplcache_enable_ignore_case = 1
let g:neocomplcache_enable_smart_case = 1
if !exists('g:neocomplcache_keyword_patterns')
    let g:neocomplcache_keyword_patterns = {}
endif
let g:neocomplcache_keyword_patterns._ = '\h\w*'
let g:neocomplcache_enable_camel_case_completion = 1
let g:neocomplcache_enable_underbar_completion = 1
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<S-TAB>"

" vim-easymotion
NeoBundle 'haya14busa/vim-easymotion'

" vim-powerline
" NeoBundle 'Lokaltog/vim-powerline'

" lightline.vim
NeoBundle 'itchyny/lightline.vim'

" jedi-vim
NeoBundle 'davidhalter/jedi-vim'

" unite.vim
NeoBundle 'Shougo/unite.vim'

" emmet-vim
NeoBundle 'mattn/emmet-vim'

" vim-markdown
NeoBundle 'plasticboy/vim-markdown'

" previm
NeoBundle 'kannokanno/previm'

" open-browser.vim
NeoBundle 'tyru/open-browser.vim'

" tpope/vim-fugitive
NeoBundle 'tpope/vim-fugitive'

" NERDTree
NeoBundle 'scrooloose/nerdtree'

" marcus/rsense
NeoBundle 'marcus/rsense'

" scrooloose/syntastic
NeoBundle 'scrooloose/syntastic'

" szw/vim-tags
NeoBundle 'szw/vim-tags'

" tpope/vim-endwise
NeoBundle 'tpope/vim-endwise'

" kchmck/vim-coffee-script
NeoBundle 'kchmck/vim-coffee-script'

filetype plugin on

NeoBundleCheck

call neobundle#end()
